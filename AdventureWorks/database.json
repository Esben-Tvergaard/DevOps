{
  "name": "AdventureWorks",
  "compatibilityLevel": 1560,
  "model": {
    "culture": "en-US",
    "defaultPowerBIDataSourceVersion": "powerBI_V3",
    "annotations": [
      {
        "name": "TabularEditor_SerializeOptions",
        "value": "{\"IgnoreInferredObjects\":false,\"IgnoreInferredProperties\":true,\"IgnoreTimestamps\":true,\"SplitMultilineStrings\":true,\"PrefixFilenames\":false,\"LocalTranslations\":true,\"LocalPerspectives\":true,\"LocalRelationships\":true,\"Levels\":[\"Data Sources\",\"Shared Expressions\",\"Roles\",\"Tables\",\"Tables/Columns\",\"Tables/Hierarchies\",\"Tables/Measures\",\"Tables/Partitions\",\"Tables/Calculation Items\"],\"IgnorePrivacySettings\":true}"
      },
      {
        "name": "BestPracticeAnalyzer_IgnoreRules",
        "value": "{\"RuleIDs\":[]}"
      },
      {
        "name": "BestPracticeAnalyzer",
        "value": [
          "[",
          "  {",
          "    \"ID\": \"DAX_COLUMNS_FULLY_QUALIFIED\",",
          "    \"Name\": \"[DAX Expressions] Column references should be fully qualified\",",
          "    \"Category\": \"DAX Expressions\",",
          "    \"Description\": \"Using fully qualified column references makes it easier to distinguish between column and measure references, and also helps avoid certain errors. When referencing a column in DAX, first specify the table name, then specify the column name in square brackets.\\r\\nReference: https://www.elegantbi.com/post/top10bestpractices\",",
          "    \"Severity\": 3,",
          "    \"Scope\": \"Measure, KPI, TablePermission, CalculationItem\",",
          "    \"Expression\": \"DependsOn.Any(Key.ObjectType = \\\"Column\\\" and Value.Any(not FullyQualified))\",",
          "    \"CompatibilityLevel\": 1200",
          "  },",
          "  {",
          "    \"ID\": \"DAX_MEASURES_UNQUALIFIED\",",
          "    \"Name\": \"[DAX Expressions] Measure references should be unqualified\",",
          "    \"Category\": \"DAX Expressions\",",
          "    \"Description\": \"Using unqualified measure references makes it easier to distinguish between column and measure references, and also helps avoid certain errors. When referencing a measure using DAX, do not specify the table name. Use only the measure name in square brackets.\\r\\nReference: https://www.elegantbi.com/post/top10bestpractices\",",
          "    \"Severity\": 3,",
          "    \"Scope\": \"Measure, CalculatedColumn, CalculatedTable, KPI, CalculationItem\",",
          "    \"Expression\": \"DependsOn.Any(Key.ObjectType = \\\"Measure\\\" and Value.Any(FullyQualified))\",",
          "    \"CompatibilityLevel\": 1200",
          "  },",
          "  {",
          "    \"ID\": \"USE_THE_TREATAS_FUNCTION_INSTEAD_OF_INTERSECT\",",
          "    \"Name\": \"[DAX Expressions] Use the TREATAS function instead of INTERSECT for virtual relationships\",",
          "    \"Category\": \"DAX Expressions\",",
          "    \"Description\": \"The TREATAS function is more efficient and provides better performance than the INTERSECT function when used in virutal relationships.\\r\\nReference:  https://www.sqlbi.com/articles/propagate-filters-using-treatas-in-dax/\",",
          "    \"Severity\": 2,",
          "    \"Scope\": \"Measure, CalculationItem\",",
          "    \"Expression\": \"RegEx.IsMatch(Expression,\\\"(?i)INTERSECT\\\\s*\\\\(\\\")\",",
          "    \"CompatibilityLevel\": 1400",
          "  },",
          "  {",
          "    \"ID\": \"USE_THE_DIVIDE_FUNCTION_FOR_DIVISION\",",
          "    \"Name\": \"[DAX Expressions] Use the DIVIDE function for division\",",
          "    \"Category\": \"DAX Expressions\",",
          "    \"Description\": \"Use the DIVIDE  function instead of using \\\"/\\\". The DIVIDE function resolves divide-by-zero cases. As such, it is recommended to use to avoid errors.  \\r\\nReference: https://docs.microsoft.com/en-us/power-bi/guidance/dax-divide-function-operator\",",
          "    \"Severity\": 2,",
          "    \"Scope\": \"Measure, CalculatedColumn, CalculationItem\",",
          "    \"Expression\": \"RegEx.IsMatch(Expression,\\\"\\\\]\\\\s*\\\\/(?!\\\\/)(?!\\\\*)\\\")\\r\\nor\\r\\nRegEx.IsMatch(Expression,\\\"\\\\)\\\\s*\\\\/(?!\\\\/)(?!\\\\*)\\\")\",",
          "    \"CompatibilityLevel\": 1200",
          "  },",
          "  {",
          "    \"ID\": \"AVOID_USING_THE_IFERROR_FUNCTION\",",
          "    \"Name\": \"[DAX Expressions] Avoid using the IFERROR function\",",
          "    \"Category\": \"DAX Expressions\",",
          "    \"Description\": \"Avoid using the IFERROR function as it may cause performance degradation. If you are concerned about a divide-by-zero error, use the DIVIDE function as it naturally resolves such errors as blank (or you can customize what should be shown in case of such an error).\\r\\nReference: https://www.elegantbi.com/post/top10bestpractices\",",
          "    \"Severity\": 2,",
          "    \"Scope\": \"Measure, CalculatedColumn\",",
          "    \"Expression\": \"RegEx.IsMatch(Expression,\\\"(?i)IFERROR\\\\s*\\\\(\\\")\",",
          "    \"CompatibilityLevel\": 1200",
          "  },",
          "  {",
          "    \"ID\": \"MEASURES_SHOULD_NOT_BE_DIRECT_REFERENCES_OF_OTHER_MEASURES\",",
          "    \"Name\": \"[DAX Expressions] Measures should not be direct references of other measures\",",
          "    \"Category\": \"DAX Expressions\",",
          "    \"Description\": \"This rule identifies measures which are simply a reference to another measure. As an example, consider a model with two measures: [MeasureA] and [MeasureB]. This rule would be triggered for MeasureB if MeasureB's DAX was MeasureB:=[MeasureA]. Such duplicative measures should be removed.\",",
          "    \"Severity\": 2,",
          "    \"Scope\": \"Measure\",",
          "    \"Expression\": \"Model.AllMeasures.Any(DaxObjectName == current.Expression)\",",
          "    \"CompatibilityLevel\": 1200",
          "  },",
          "  {",
          "    \"ID\": \"FILTER_COLUMN_VALUES\",",
          "    \"Name\": \"[DAX Expressions] Filter column values with proper syntax\",",
          "    \"Category\": \"DAX Expressions\",",
          "    \"Description\": \"Instead of using this pattern FILTER('Table','Table'[Column]=\\\"Value\\\") for the filter parameters of a CALCULATE or CALCULATETABLE function, use one of the options below. As far as whether to use the KEEPFILTERS function, see the second reference link below.\\r\\n\\r\\nOption 1: KEEPFILTERS('Table'[Column]=\\\"Value\\\")\\r\\nOption 2: 'Table'[Column]=\\\"Value\\\"\\r\\n\\r\\nReference: https://docs.microsoft.com/power-bi/guidance/dax-avoid-avoid-filter-as-filter-argument\\r\\nReference: https://www.sqlbi.com/articles/using-keepfilters-in-dax/\",",
          "    \"Severity\": 2,",
          "    \"Scope\": \"Measure, CalculatedColumn, CalculationItem\",",
          "    \"Expression\": \"RegEx.IsMatch(Expression,\\\"(?i)CALCULATE\\\\s*\\\\(\\\\s*[^,]+,\\\\s*(?i)FILTER\\\\s*\\\\(\\\\s*\\\\'*[A-Za-z0-9 _]+'*\\\\s*,\\\\s*\\\\'*[A-Za-z0-9 _]+\\\\'*\\\\[[A-Za-z0-9 _]+\\\\]\\\")\\r\\nor\\r\\nRegEx.IsMatch(Expression,\\\"(?i)CALCULATETABLE\\\\s*\\\\([^,]*,\\\\s*(?i)FILTER\\\\s*\\\\(\\\\s*\\\\'*[A-Za-z0-9 _]+\\\\'*,\\\\s*\\\\'*[A-Za-z0-9 _]+\\\\'*\\\\[[A-Za-z0-9 _]+\\\\]\\\")\",",
          "    \"CompatibilityLevel\": 1200",
          "  },",
          "  {",
          "    \"ID\": \"FILTER_MEASURE_VALUES_BY_COLUMNS\",",
          "    \"Name\": \"[DAX Expressions] Filter measure values by columns, not tables\",",
          "    \"Category\": \"DAX Expressions\",",
          "    \"Description\": \"Instead of using this pattern FILTER('Table',[Measure]>Value) for the filter parameters of a CALCULATE or CALCULATETABLE function, use one of the options below (if possible). Filtering on a specific column will produce a smaller table for the engine to process, thereby enabling faster performance. Using the VALUES function or the ALL function depends on the desired measure result.\\r\\n\\r\\nOption 1: FILTER(VALUES('Table'[Column]),[Measure] > Value)\\r\\nOption 2: FILTER(ALL('Table'[Column]),[Measure] > Value)\\r\\n\\r\\nReference: https://docs.microsoft.com/power-bi/guidance/dax-avoid-avoid-filter-as-filter-argument\",",
          "    \"Severity\": 2,",
          "    \"Scope\": \"Measure, CalculatedColumn, CalculationItem\",",
          "    \"Expression\": \"RegEx.IsMatch(Expression,\\\"(?i)CALCULATE\\\\s*\\\\(\\\\s*[^,]+,\\\\s*(?i)FILTER\\\\s*\\\\(\\\\s*\\\\'*[A-Za-z0-9 _]+\\\\'*\\\\s*,\\\\s*\\\\[[^\\\\]]+\\\\]\\\")\\r\\nor\\r\\nRegEx.IsMatch(Expression,\\\"(?i)CALCULATETABLE\\\\s*\\\\([^,]*,\\\\s*(?i)FILTER\\\\s*\\\\(\\\\s*\\\\'*[A-Za-z0-9 _]+\\\\'*,\\\\s*\\\\[\\\")\",",
          "    \"CompatibilityLevel\": 1200",
          "  },",
          "  {",
          "    \"ID\": \"INACTIVE_RELATIONSHIPS_THAT_ARE_NEVER_ACTIVATED\",",
          "    \"Name\": \"[DAX Expressions] Inactive relationships that are never activated\",",
          "    \"Category\": \"DAX Expressions\",",
          "    \"Description\": \"Inactive relationships are activated using the USERELATIONSHIP function. If an inactive relationship is not referenced in any measure via this function, the relationship will not be used. It should be determined whether the relationship is not necessary or to activate the relationship via this method.\\r\\n\\r\\nReference: https://docs.microsoft.com/power-bi/guidance/relationships-active-inactive\\r\\nReference: https://dax.guide/userelationship/\",",
          "    \"Severity\": 2,",
          "    \"Scope\": \"Relationship\",",
          "    \"Expression\": \"IsActive == false\\r\\nand not\\r\\n(\\r\\nModel.AllMeasures.Any(RegEx.IsMatch(Expression,\\r\\n\\\"(?i)USERELATIONSHIP\\\\s*\\\\(\\\\s*\\\\'*\\\" +\\r\\ncurrent.FromTable.Name + \\\"\\\\'*\\\\[\\\" + \\r\\ncurrent.FromColumn.Name + \\\"\\\\]\\\\s*,\\\\s*\\\\'*\\\" +\\r\\ncurrent.ToTable.Name + \\\"\\\\'*\\\\[\\\" +\\r\\ncurrent.ToColumn.Name + \\\"\\\\]\\\"))\\r\\nor\\r\\nModel.AllCalculationItems.Any(RegEx.IsMatch(Expression,\\r\\n\\\"(?i)USERELATIONSHIP\\\\s*\\\\(\\\\s*\\\\'*\\\" +\\r\\ncurrent.FromTable.Name + \\\"\\\\'*\\\\[\\\" + \\r\\ncurrent.FromColumn.Name + \\\"\\\\]\\\\s*,\\\\s*\\\\'*\\\" +\\r\\ncurrent.ToTable.Name + \\\"\\\\'*\\\\[\\\" +\\r\\ncurrent.ToColumn.Name + \\\"\\\\]\\\"))\\r\\n)\",",
          "    \"CompatibilityLevel\": 1200",
          "  }",
          "]"
        ]
      },
      {
        "name": "TabularEditor_Cultures",
        "value": "[]"
      },
      {
        "name": "TabularEditor_Perspectives",
        "value": "[{\"Name\":\"Internet Operation\",\"Description\":\"\",\"Annotations\":{}},{\"Name\":\"Inventory\",\"Description\":\"\",\"Annotations\":{}},{\"Name\":\"Reseller Operation\",\"Description\":\"\",\"Annotations\":{}}]"
      }
    ]
  }
}